#! /bin/sh

# xmlwf/xmlwf - temporary wrapper script for .libs/xmlwf
# Generated by ltmain.sh - GNU libtool 1.5.22 (1.1220.2.365 2005/12/18 22:14:06)
#
# The xmlwf/xmlwf program cannot be directly executed until all the libtool
# libraries that it depends on are installed.
#
# This wrapper script should never be moved out of the build directory.
# If it is, it will not operate correctly.

# Sed substitution that helps us do robust quoting.  It backslashifies
# metacharacters that are still active within double-quoted strings.
Xsed='/usr/bin/sed -e 1s/^X//'
sed_quote_subst='s/\([\\`\\"$\\\\]\)/\\\1/g'

# The HP-UX ksh and POSIX shell print the target directory to stdout
# if CDPATH is set.
(unset CDPATH) >/dev/null 2>&1 && unset CDPATH

relink_command="(cd /work/home/dp626/tsNET/graph-tool-2.26/expat-2.0.1; LIBRARY_PATH=\"/opt/yarcc/compilers/parallel_studio_xe/2016_composer_edition/1/default/compilers_and_libraries_2016.3.210/linux/ipp/lib/intel64:/opt/yarcc/compilers/parallel_studio_xe/2016_composer_edition/1/default/compilers_and_libraries_2016.3.210/linux/compiler/lib/intel64:/opt/yarcc/compilers/parallel_studio_xe/2016_composer_edition/1/default/compilers_and_libraries_2016.3.210/linux/mkl/lib/intel64:/opt/yarcc/compilers/parallel_studio_xe/2016_composer_edition/1/default/compilers_and_libraries_2016.3.210/linux/tbb/lib/intel64/gcc4.4:/opt/yarcc/compilers/parallel_studio_xe/2016_composer_edition/1/default/compilers_and_libraries_2016.3.210/linux/daal/lib/intel64_lin:/opt/yarcc/compilers/parallel_studio_xe/2016_composer_edition/1/default/compilers_and_libraries_2016.3.210/linux/daal/../tbb/lib/intel64_lin/gcc4.4:/opt/yarcc/compilers/parallel_studio_xe/2016_composer_edition/1/default/compilers_and_libraries_2016.3.210/linux/daal/../compiler/lib/intel64_lin\"; export LIBRARY_PATH; { test -z \"\${COMPILER_PATH+set}\" || unset COMPILER_PATH || { COMPILER_PATH=; export COMPILER_PATH; }; }; { test -z \"\${GCC_EXEC_PREFIX+set}\" || unset GCC_EXEC_PREFIX || { GCC_EXEC_PREFIX=; export GCC_EXEC_PREFIX; }; }; { test -z \"\${LD_RUN_PATH+set}\" || unset LD_RUN_PATH || { LD_RUN_PATH=; export LD_RUN_PATH; }; }; LD_LIBRARY_PATH=\"/opt/yarcc/compilers/parallel_studio_xe/2016_composer_edition/1/default/compilers_and_libraries_2016.3.210/linux/compiler/lib/intel64:/opt/yarcc/compilers/parallel_studio_xe/2016_composer_edition/1/default/compilers_and_libraries_2016.3.210/linux/compiler/lib/intel64_lin:/opt/yarcc/compilers/parallel_studio_xe/2016_composer_edition/1/default/compilers_and_libraries_2016.3.210/linux/mpi/intel64/lib:/opt/yarcc/compilers/parallel_studio_xe/2016_composer_edition/1/default/compilers_and_libraries_2016.3.210/linux/mpi/mic/lib:/opt/yarcc/compilers/parallel_studio_xe/2016_composer_edition/1/default/compilers_and_libraries_2016.3.210/linux/ipp/lib/intel64:/opt/yarcc/compilers/parallel_studio_xe/2016_composer_edition/1/default/compilers_and_libraries_2016.3.210/linux/compiler/lib/intel64:/opt/yarcc/compilers/parallel_studio_xe/2016_composer_edition/1/default/compilers_and_libraries_2016.3.210/linux/mkl/lib/intel64:/opt/yarcc/compilers/parallel_studio_xe/2016_composer_edition/1/default/compilers_and_libraries_2016.3.210/linux/tbb/lib/intel64/gcc4.4:/opt/yarcc/compilers/parallel_studio_xe/2016_composer_edition/1/default/debugger_2016/libipt/intel64/lib:/opt/yarcc/compilers/parallel_studio_xe/2016_composer_edition/1/default/compilers_and_libraries_2016.3.210/linux/daal/lib/intel64_lin:/opt/yarcc/compilers/parallel_studio_xe/2016_composer_edition/1/default/compilers_and_libraries_2016.3.210/linux/daal/../tbb/lib/intel64_lin/gcc4.4:/opt/yarcc/compilers/parallel_studio_xe/2016_composer_edition/1/default/compilers_and_libraries_2016.3.210/linux/daal/../compiler/lib/intel64_lin:/usr/local/netcdf-ifort/lib/:/work/home/dp626/Library/openMPI/lib/:/opt/sgi/uvstats/lib\"; export LD_LIBRARY_PATH; PATH=\"/work/home/dp626//.cargo/bin:/usr/local/anaconda/bin/:/opt/nco/4.6.9/bin:/opt/netcdf/complete/bin:/opt/hdf5/1.8.19/bin:/opt/yarcc/compilers/parallel_studio_xe/2016_composer_edition/1/default/compilers_and_libraries_2016.3.210/linux/bin/intel64:/opt/yarcc/compilers/parallel_studio_xe/2016_composer_edition/1/default/compilers_and_libraries_2016.3.210/linux/mpi/intel64/bin:/opt/yarcc/compilers/parallel_studio_xe/2016_composer_edition/1/default/debugger_2016/gdb/intel64_mic/bin:/usr/local/anaconda/bin:/opt/sgi/uvstats/bin:/usr/local/bin:/usr/bin:/bin:/usr/bin/X11:/usr/games:/usr/lib/mit/bin:/opt/pbs/bin\"; export PATH; gcc -I./lib -I. -g -O2 -Wall -Wmissing-prototypes -Wstrict-prototypes -fexceptions -DHAVE_EXPAT_CONFIG_H -o \$progdir/\$file xmlwf/xmlwf.o xmlwf/xmlfile.o xmlwf/codepage.o xmlwf/unixfilemap.o  ./.libs/libexpat.so -Wl,--rpath -Wl,/work/home/dp626/tsNET/graph-tool-2.26/expat-2.0.1/.libs)"

# This environment variable determines our operation mode.
if test "$libtool_install_magic" = "%%%MAGIC variable%%%"; then
  # install mode needs the following variable:
  notinst_deplibs=' libexpat.la'
else
  # When we are sourced in execute mode, $file and $echo are already set.
  if test "$libtool_execute_magic" != "%%%MAGIC variable%%%"; then
    echo="echo"
    file="$0"
    # Make sure echo works.
    if test "X$1" = X--no-reexec; then
      # Discard the --no-reexec flag, and continue.
      shift
    elif test "X`($echo '\t') 2>/dev/null`" = 'X\t'; then
      # Yippee, $echo works!
      :
    else
      # Restart under the correct shell, and then maybe $echo will work.
      exec /bin/sh "$0" --no-reexec ${1+"$@"}
    fi
  fi

  # Find the directory that this script lives in.
  thisdir=`$echo "X$file" | $Xsed -e 's%/[^/]*$%%'`
  test "x$thisdir" = "x$file" && thisdir=.

  # Follow symbolic links until we get to the real thisdir.
  file=`ls -ld "$file" | /usr/bin/sed -n 's/.*-> //p'`
  while test -n "$file"; do
    destdir=`$echo "X$file" | $Xsed -e 's%/[^/]*$%%'`

    # If there was a directory component, then change thisdir.
    if test "x$destdir" != "x$file"; then
      case "$destdir" in
      [\\/]* | [A-Za-z]:[\\/]*) thisdir="$destdir" ;;
      *) thisdir="$thisdir/$destdir" ;;
      esac
    fi

    file=`$echo "X$file" | $Xsed -e 's%^.*/%%'`
    file=`ls -ld "$thisdir/$file" | /usr/bin/sed -n 's/.*-> //p'`
  done

  # Try to get the absolute directory name.
  absdir=`cd "$thisdir" && pwd`
  test -n "$absdir" && thisdir="$absdir"

  program=lt-'xmlwf'
  progdir="$thisdir/.libs"

  if test ! -f "$progdir/$program" || \
     { file=`ls -1dt "$progdir/$program" "$progdir/../$program" 2>/dev/null | /usr/bin/sed 1q`; \
       test "X$file" != "X$progdir/$program"; }; then

    file="$$-$program"

    if test ! -d "$progdir"; then
      mkdir "$progdir"
    else
      rm -f "$progdir/$file"
    fi

    # relink executable if necessary
    if test -n "$relink_command"; then
      if relink_command_output=`eval $relink_command 2>&1`; then :
      else
	echo "$relink_command_output" >&2
	rm -f "$progdir/$file"
	exit 1
      fi
    fi

    mv -f "$progdir/$file" "$progdir/$program" 2>/dev/null ||
    { rm -f "$progdir/$program";
      mv -f "$progdir/$file" "$progdir/$program"; }
    rm -f "$progdir/$file"
  fi

  if test -f "$progdir/$program"; then
    if test "$libtool_execute_magic" != "%%%MAGIC variable%%%"; then
      # Run the actual program with our arguments.

      exec "$progdir/$program" ${1+"$@"}

      $echo "$0: cannot exec $program ${1+"$@"}"
      exit 1
    fi
  else
    # The program doesn't exist.
    $echo "$0: error: \`$progdir/$program' does not exist" 1>&2
    $echo "This script is just a wrapper for $program." 1>&2
    echo "See the libtool documentation for more information." 1>&2
    exit 1
  fi
fi
